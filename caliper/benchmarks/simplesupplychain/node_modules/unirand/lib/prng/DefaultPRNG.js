'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _BasicPRNG2 = require('./BasicPRNG');

var _BasicPRNG3 = _interopRequireDefault(_BasicPRNG2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
/**
 * Default PRNG
 */


var DefaultPRNG = function (_BasicPRNG) {
    _inherits(DefaultPRNG, _BasicPRNG);

    function DefaultPRNG() {
        _classCallCheck(this, DefaultPRNG);

        return _possibleConstructorReturn(this, (DefaultPRNG.__proto__ || Object.getPrototypeOf(DefaultPRNG)).call(this));
    }

    _createClass(DefaultPRNG, [{
        key: 'random',
        value: function random() {
            var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

            if (typeof n !== 'number') {
                return Math.random();
            }

            if (n <= 1) {
                return Math.random();
            }

            var random_array = [];
            for (var i = 0; i < n; i += 1) {
                random_array[i] = Math.random();
            }
            return random_array;
        }

        // eslint-disable-next-line

    }, {
        key: 'randomInt',
        value: function randomInt() {
            var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

            throw new Error('Default RPNG does not have .randomInt method');
        }
    }, {
        key: 'next',
        value: function next() {
            return Math.random();
        }
    }, {
        key: 'nextInt',
        value: function nextInt() {
            throw new Error('Default RPNG does not have .nextInt method');
        }
    }]);

    return DefaultPRNG;
}(_BasicPRNG3.default);

exports.default = DefaultPRNG;