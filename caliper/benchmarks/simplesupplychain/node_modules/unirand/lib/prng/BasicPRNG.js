'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
/**
 *  Basic PRNG
 *  Generates random numbers with seed
 */


var _hash = require('../utils/hash');

var _hash2 = _interopRequireDefault(_hash);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var BasicPRNG = function () {
    function BasicPRNG() {
        _classCallCheck(this, BasicPRNG);

        this._seed = undefined;
    }

    /**
     * Random number generator with seed\
     * @abstract
     * @returns {number} random number
     */
    // eslint-disable-next-line


    _createClass(BasicPRNG, [{
        key: 'random',
        value: function random() {
            var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

            throw new Error('Unassigned method');
        }

        /**
         * Next random value
         * Returns only single random value
         * Does not support seed
         * @abstract
         * @returns {number}
         */

    }, {
        key: 'next',
        value: function next() {
            throw new Error('Unassigned method');
        }

        /**
         * Next integer random value
         * Returns only single random value
         * Does not support seed
         * @abstract
         * @returns {number}
         */

    }, {
        key: 'nextInt',
        value: function nextInt() {
            throw new Error('Unassigned method');
        }

        /**
         * Generates random integer [0, 2^32)
         * @returns {number}
         */
        // eslint-disable-next-line

    }, {
        key: 'randomInt',
        value: function randomInt() {
            var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

            throw new Error('Unassigned method');
        }

        /**
         * Sets seed value for PRNG
         */

    }, {
        key: 'seed',
        value: function seed(seed_value) {
            this._seed = seed_value;
        }

        /**
         * Modulo for seed
         * @returns {number}
         */

    }], [{
        key: 'random_seed',


        /**
         * Sets random seed
         */
        value: function random_seed() {
            var _seed = (0, _hash2.default)(Date.now() + Math.floor(Math.random() * BasicPRNG.modulo));
            _seed = _seed % BasicPRNG.modulo;
            if (_seed < 0) {
                _seed += BasicPRNG.modulo - 1;
            }
            return _seed;
        }
    }, {
        key: 'modulo',
        get: function get() {
            return 2147483647;
        }
    }]);

    return BasicPRNG;
}();

exports.default = BasicPRNG;